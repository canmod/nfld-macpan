ggtitle("Newfoundland and Labrador")+
theme_classic()+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")
g.ratio=ggplot() +
geom_hline(yintercept=2, col="grey")+
geom_hline(yintercept=3, col="grey")+
geom_hline(yintercept=5.4, col="grey")+
xlab("")+
annotate("text", x = as.Date(tail(data$dates2,1)), y = 2.6, label = "CITF pre-Omicron",size=3.5, hjust=1)+
annotate("text", x = as.Date(tail(data$dates2,1)), y = 1.9, label = "hosp. admissions (low)",size=3.5, hjust=1)+
annotate("text", x = as.Date(tail(data$dates2,1)), y = 2.9, label = "hosp. admissions (high)",size=3.5, hjust=1)+
annotate("text", x = as.Date(tail(data$dates2,1)), y = 5.3, label = "K-12 RAT study",size=3.5, hjust=1)+
geom_hline(yintercept=2.7, col="grey")+
xlab("")+
geom_line(data=data[!is.na(data$all),],aes(x=as.Date(dates2), y=all/active),lwd=2, col = cols[5])+
geom_line(data=data[!is.na(data$all.hub),],aes(x=as.Date(dates2), y=all.hub/active.hub),lwd=2, col = cols[6])+
ylim(0,6)+
ylab("Number of unreported cases per reported case")+
ggtitle("Newfoundland and Labrador")+
theme_classic()+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")
gNL2=ggplot() +
geom_line(data=data, aes(x=as.Date(dates2), y=data$cases.raw.hub), col = cols[6],lwd=0.5)+
geom_point(data=data, aes(x=as.Date(dates2), y=data$cases.raw.hub), pch=8, col=cols[6])+
geom_point(data=data, aes(x=as.Date(dates2), y=data$cases.raw), col = cols[5])+
geom_line(data=data, aes(x=as.Date(dates2), y=data$cases.raw), col = cols[5],lwd=0.5)+
xlab("")+
ylab("Reported new cases")+
ggtitle("Newfoundland and Labrador")+
theme_classic()+
ylim(c(0,max(data$cases.raw, data$detected.roll)))+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")
gNL2b=ggplot() +
geom_line(data=data, aes(x=as.Date(dates2), y=100*cases.raw.hub/test.raw.hub), col=cols[6],lwd=.5)+
geom_point(data=data, aes(x=as.Date(dates2), y=100*cases.raw.hub/test.raw.hub), pch=8, col = cols[6])+
geom_point(data=data, aes(x=as.Date(dates2), y=100*cases.raw/test.raw), col = cols[5])+
geom_line(data=data, aes(x=as.Date(dates2), y=100*cases.raw/test.raw), col = cols[5],lwd=.5)+
xlab("")+
ylab("Positivity (%)")+
ggtitle("Newfoundland and Labrador")+
theme_classic()+
ylim(c(0,max(data$cases.raw, data$detected.roll)))+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")
gNL3=ggplot() +
geom_line(data=tail(data, 14), aes(x=as.Date(dates2), y=cases.raw.hub))+
geom_point(data=tail(data, 14), aes(x=as.Date(dates2), y=cases.raw.hub), pch=8)+
geom_point(data=tail(data, 14), aes(x=as.Date(dates2), y=cases.raw), col = cols[5])+
geom_line(data=tail(data, 14), aes(x=as.Date(dates2), y=cases.raw), col = cols[5])+
xlab("")+
ylab("Reported new cases")+
ggtitle("Newfoundland and Labrador (last 14 days)")+
theme_classic()+
ylim(c(0,max(tail(data$cases.raw,14), tail(data$detected.roll, 14))))+
scale_x_date(date_breaks = "1 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.position = "none", plot.title = element_text(size=10))
gNL3b=ggplot() +
geom_line(data=tail(data,14), aes(x=as.Date(dates2), y=test.raw.hub))+
geom_point(data=tail(data,14), aes(x=as.Date(dates2), y=test.raw.hub), pch=8)+
geom_point(data=tail(data,14), aes(x=as.Date(dates2), y=test.raw), col = cols[5])+
geom_line(data=tail(data,14), aes(x=as.Date(dates2), y=test.raw), col = cols[5])+
xlab("")+
ylab("Reported tests")+
ggtitle("Newfoundland and Labrador (last 14 days)")+
theme_classic()+
ylim(c(0,max(data$cases.raw, data$detected.roll)))+
scale_x_date(date_breaks = "1 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.position = "none", plot.title = element_text(size=10))
data4=read.csv('https://raw.githubusercontent.com/ahurford/covid-nl/master/NL-Hub/Prov_stats.csv', fill=TRUE)
data6 = read.csv('https://raw.githubusercontent.com/ahurford/covid-nl-2022/master/data.csv', fill=TRUE)
data4$date_of_update=as.Date(data4$date_of_update)
date = c(data4$date_of_update, data6$date)
i = which(date=="2021-12-01")
new.death = diff(c(0,data4$total_deaths, data6$cum.death))
in.hospital = c(data4$currently_hospitalized, data6$hosp.occ)
cases = c(data4$new_provincial_cases, data6$cases)
data10 = data.frame(date=date,cases=cases, roll.cases = c(rep(NA,6), rollmean(cases,7, align="right")))
data10 = tail(data10,-i)
smoothdata2 = function(){
T = length(values[,1])
difference <- c(1,as.double(difftime(values$date[2:T],values$date[1:(T-1)],units='days')))
dates = seq(as.Date("2021-12-03"), values$date[T], by="days")
new.death = NULL
in.hospital = NULL
difference2 = NULL
cases = NULL
ii = NULL
for(i in seq(1,T)){
new.death = c(new.death,rep(values$new.death[i]/difference[i],difference[i]))
cases = c(cases,rep(values$cases[i],difference[i]))
in.hospital = c(in.hospital,rep(values$in.hospital[i],difference[i]))
difference2 = c(difference2, rep(difference[i],difference[i]))
}
values = data.frame(dates=dates, new.death=new.death, in.hospital=in.hospital, difference = difference2, cases=cases)
return(values)
}
values <- data.frame(date = date, new.death = new.death, in.hospital=in.hospital, cases=cases)
values<- values[!is.na(values$in.hospital),]
values <- tail(values, -i)
dat=values
out<-smoothdata2()
sum.death = rollsumr(out$new.death,7)
hospital = out$in.hospital
roll.cases = rollmean(out$cases,7)
data9 = data.frame(date = tail(out$date,-6), deaths.wk = sum.death, hosp = tail(hospital,-6), new.death = tail(out$new.death, -6), cases = tail(out$cases, -6), roll.cases = roll.cases, active = rollsumr(out$cases,7))
values = values[-(1:5),]
data9 = data9[-(1:6),]
gtime0=ggplot(data9)+
geom_ribbon(data=data10,aes(x=as.Date(date), ymax=cases, ymin = 0), fill="plum3", alpha = 0.5)+
geom_line(data=data10,aes(x=as.Date(date), y=cases), col="plum3")+
geom_point(data=data10, aes(x=as.Date(date),y=cases), col="plum3")+
xlab("")+
ylab("")+
ggtitle(paste("Reported new cases (daily) to", format(tail(data9$date,1), "%a %b %d")))+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90))
gtime=ggplot()+
geom_ribbon(data=data9,aes(x=as.Date(date), ymax=hosp, ymin = 0), fill="tan1", alpha = 0.5)+
geom_line(data=data9,aes(x=as.Date(date), y=hosp), col="tan1")+
geom_point(data=data9, aes(x=as.Date(date),y=hosp), col="tan1")+
xlab("")+
ylab("")+
ggtitle(paste("Hospital occupancy to", format(tail(data9$date,1), "%a %b %d")))+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90))
gtime2=ggplot(data9)+
geom_ribbon(aes(x=as.Date(date), ymax=deaths.wk, ymin = 0),fill="mediumaquamarine", alpha = 0.5)+
geom_line(aes(x=as.Date(date), y=deaths.wk),col="mediumaquamarine")+
geom_point(aes(x=as.Date(date), y=deaths.wk),col="mediumaquamarine")+
#geom_point(data=data9, aes(x=as.Date(date),y=7*new.death), col="plum3")+
#geom_point(data=values, aes(x=as.Date(date),y=new.death), col="mediumaquamarine")+
xlab("")+
ylab("")+
ggtitle(paste("Deaths during the last 7 days to", format(tail(data9$date,1), "%a %b %d")))+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
ylim(c(0,18))+
theme(axis.text.x = element_text(angle = 90))
# gtime3=ggplot(data9)+
#   geom_ribbon(aes(x=as.Date(date), ymax=cumsum(deaths/7), ymin = 0),fill="mediumaquamarine", alpha = 0.5)+
#   geom_line(aes(x=as.Date(date), y=cumsum(new.death)),col="mediumaquamarine")+
#   geom_point(data=values, aes(x=as.Date(date),y=cumsum(new.death)), col="mediumaquamarine")+
#   xlab("")+
#   ylab("")+
#   ggtitle(paste("Cumulative deaths from Dec 15, 2021"))+
#   theme_classic()+
#   scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
#   theme(axis.text.x = element_text(angle = 90))
dat=read.csv('https://raw.githubusercontent.com/ahurford/covid-nl/master/covid19-download.csv', fill=TRUE)
datNL = dat[dat$prname=="Newfoundland and Labrador",]
datNL = data.frame(date=datNL$date, active = datNL$numactive, tests = datNL$numteststoday, cases=datNL$numtoday)
active2 = rollsumr(datNL$cases, k = 7, fill = NA)
active2[1:6] = cumsum(datNL$cases[1:6])
rolltest = c(rep(NA,6),rollmean(datNL$tests, k=7))
datNL = data.frame(datNL, active2 = active2, rolltest = rolltest)
datNL = datNL[datNL$tests>0,]
values <- datNL
values$date=as.Date(values$date)
values$cases=cumsum(values$cases)
values$tests = cumsum(values$tests)
values = values[values$date>"2021-12-12",]
res = smoothdata()
i = which(datNL$date == "2021-12-15")
datNL=tail(datNL,-(i-1))
max.active = max(data9$active)
g7 = ggplot()+
geom_vline(xintercept = as.Date("2022-01-07"), lty=2, col="grey")+
geom_vline(xintercept = as.Date("2022-02-17"), lty=2, col="grey")+
geom_vline(xintercept = as.Date("2022-01-04"), lty=2, col="grey")+
geom_vline(xintercept = as.Date("2021-12-23"), lty=2, col="grey")+
geom_vline(xintercept = as.Date("2022-03-17"), lty=2, col="grey")+
geom_vline(xintercept = as.Date("2022-01-25"), lty=2, col="grey")+
geom_vline(xintercept = as.Date("2022-03-14"), lty=2, col="grey")+
geom_ribbon(data=res, aes(x=as.Date(dates2), ymax=all.low, ymin=all.high), fill="plum3", alpha = 0.2)+
geom_line(data=res, aes(x=as.Date(dates2), y=all), col="plum3", lwd=2)+
geom_point(data=data9, aes(x=as.Date(date), y=active), col = "plum3")+
geom_line(data=data9, aes(x=as.Date(date), y=active), col = "plum3")+
xlab("")+
ylab("")+
ggtitle(paste("Active cases to", format(tail(as.Date(res$dates2)-7,1), "%a %b %d")))+
annotate("text", x = as.Date("2022-02-10"), y = 4000, label = "est. total active cases",fontface=2, col="plum3")+
annotate("text", x = as.Date("2022-02-10"), y = 1000, label = "reported active cases", col="plum3")+
annotate("text", x = as.Date("2022-01-08"), y = 12500, label = "Testing changes", col="darkgrey", angle=90, align="left")+
annotate("text", x = as.Date("2022-03-18"), y =12500, label = "Testing changes", col="darkgrey", angle=90, align="left")+
annotate("text", x = as.Date("2022-01-26"), y = 12500, label = "K-12 return", col="darkgrey", angle=90, align="left")+
annotate("text", x = as.Date("2021-12-24"), y = 12500, label = "Alert level 3", col="darkgrey", angle=90, align="left")+
annotate("text", x = as.Date("2022-01-05"), y = 12500, label = "Alert level 4", col="darkgrey", angle=90, align="left")+
annotate("text", x = as.Date("2022-03-15"), y = 12500, label = "NL reopens", col="darkgrey", angle=90, align="left")+
annotate("text", x = as.Date("2022-02-18"), y = 10000, label = "Phased reopening begins", col="darkgrey", angle=90, align="left")+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90))
g8 = ggplot()+
geom_ribbon(data=res, aes(x=as.Date(dates2), ymax=test.raw, ymin=0), fill="plum3", alpha = 0.5)+
geom_line(data=res, aes(x=as.Date(dates2), y=test.raw), col = "plum3")+
geom_point(data=datNL, aes(x=as.Date(date), y=tests), col = "plum3")+
xlab("")+
ylab("")+
ggtitle(paste("Tests completed (daily) to", format(tail(as.Date(datNL$date),1), "%a %b %d")))+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90))
g9 = ggplot()+
geom_point(data=NL, aes(as.Date(dates2), y=cases.raw), col="plum3", lwd=0.5)+
geom_line(data=datNL, aes(x=as.Date(date), y=cases), col = "plum3")+
xlab("")+
ylab("")+
ggtitle(paste("Reported cases to", format(tail(as.Date(datNL$date),1), "%a %b %d")))+
theme_classic()+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90))
g18 = ggplot()+
geom_line(data=res, aes(x=as.Date(dates2), y=all.vlow), lwd=2)+
xlab("")+
ylab("Active cases in NL\n(reported and unreported)")+
ggtitle("Chui and Ndeffo-Mbah (2021)\nwith n=0")+
theme_classic()+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90))
g18b = ggplot()+
geom_point(data=res[res$positivity.raw>0,], aes(x=as.Date(dates2), y=100*positivity.raw), size = 0.5, col = "grey")+
geom_ribbon(data=res[res$positivity.raw>0,], aes(x=as.Date(dates2), ymax=100*positivity.raw, ymin = 0), alpha=0.2)+
geom_line(data=res[res$positivity.raw>0,], aes(x=as.Date(dates2), y=100*positivity.roll), lwd=1)+
xlab("")+
ylab("")+
ggtitle(paste("% test positivity to", format(tail(as.Date(datNL$date),1), "%a %b %d")))+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90))
gratio2=ggplot()+
geom_ribbon(data=res, aes(x=as.Date(dates2), ymin=all.low/active, ymax = all.high/active), fill="plum3",alpha=0.3)+
geom_line(data=res, aes(x=as.Date(dates2), y=all/active), col="plum3", lwd=2)+
# geom_hline(yintercept=2, col="grey")+
#geom_hline(yintercept=3, col="grey")+
#geom_hline(yintercept=5.4, col="grey")+
xlab("")+
# annotate("text", x = as.Date(tail(data$dates2,1)), y = 2.6, label = "CITF pre-Omicron",size=3.5, hjust=1)+
# annotate("text", x = as.Date(tail(data$dates2,1)), y = 1.9, label = "hosp. admissions (low)",size=3.5, hjust=1)+
# annotate("text", x = as.Date(tail(data$dates2,1)), y = 2.9, label = "hosp. admissions (high)",size=3.5, hjust=1)+
# annotate("text", x = as.Date(tail(data$dates2,1)), y = 5.3, label = "K-12 RAT study",size=3.5, hjust=1)+
# geom_hline(yintercept=2.7, col="grey")+
ylab("")+
ggtitle("Unreported cases per reported case")+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date(res$dates2[14]), as.Date(res$dates2[length(res$dates2)-7])))+
theme(axis.text.x = element_text(angle = 90))
T<-10
DT = function(){
mod = nls(val ~ a*exp(r*seq(1,T)),
start = list(a = 100, r = 0.2))
# The code below was slow, so I commented it out.
#CI = confint(mod, level=0.95)
#CI.lower = max(CI[2,1],0)
#CI.upper = CI[2,2]
lambda = unname(coef(mod)[2])
DT = c(round(log(2)/lambda,2))
p1=summary(mod)$coefficients[,4]
p = unname(p1[2])
return(c(DT,lambda))
}
HT = function(){
mod = nls(val ~ a*exp(-r*seq(1,T)),
start = list(a = 300, r = 0.2))
## The code below was slow so I commented it out
#CI = confint(mod, level=0.95)
#CI.lower = max(CI[2,1],0)
#CI.upper = CI[2,2]
lambda = unname(coef(mod)[2])
DT = c(-round(log(.5)/lambda,2), NA, NA)
p1=summary(mod)$coefficients[,4]
p = unname(p1[2])
return(c(DT))
}
R = rep(1,length(data9$cases))
seq = seq(T,length(data9$cases))
seq = seq[c(-4,-97)]
for(i in seq){
val<-data9$cases[(i-T+1):i]
dt = DT()
dtime = dt[1]
r = dt[2]
Gbar = 2.2
Gbar.sd = 1.1
k = Gbar.sd^2/Gbar^2
R[i] = (1+Gbar*r*k)^(1/k)
}
R.all = rep(NA,length(res$all))
seq = seq((15+T),length(res$all)-6)
for(i in seq){
val<-res$all[(i-T+1):i]
dt = DT()
dtime = dt[1]
r = dt[2]
Gbar = 2.2
Gbar.sd = 1.1
k = Gbar.sd^2/Gbar^2
R.all[i] = (1+Gbar*r*k)^(1/k)
}
if((length(data9$date)-length(res$dates2))>=0){
R.df = data.frame(date = tail(data9$date,-T), R=tail(R,-T), R.all=c(tail(R.all,-T),rep(NA,length(data9$date)-length(res$dates2))))
} else{
R.df = data.frame(date = tail(res$dates2,-T), R=c(rep(NA,length(res$dates2)-length(data9$date)),tail(R,-T)), R.all=tail(R.all,-T))
}
R1g = R.df$R
for(i in seq(1,length(R1g))){
if(!is.na(R1g[i])){
if(R1g[i]<1){
R1g[i] = NA
}
}
}
R2g = R.df$R.all
for(i in seq(1,length(R2g))){
if(!is.na(R2g[i])){
if(R.df$R.all[i]<1){
R2g[i] = NA}
}
}
g.R = ggplot(data = R.df, aes(x=date))+
geom_hline(yintercept=1,lty=2)+
geom_line(aes(y=R.all), col = "dodgerblue", lwd=1)+
geom_line(aes(y=R2g), col = "red", lwd=1)+
geom_line(aes(y=R), col = "dodgerblue", lwd=2)+
geom_line(aes(y=R1g), col = "red", lwd=2)+
#geom_point(aes(y=R), col = "dodgerblue", fill="white", shape=21,size=2)+
#geom_point(aes(y=R1g), col = "red", fill="white", shape=21,size=2)+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits=c(R.df$date[30], tail(R.df$date,1)))+theme(axis.text.x = element_text(angle = 90))+ylim(0.7,1.2)+ggtitle('Reproduction number, R')+xlab("")+ylab("")
gtime0
gtime/gtime2
knitr::include_graphics("McMasterPandemic.png")
dataC = data10[which(data10$date=="2022-03-18"):length(data10$date),]
dataT = res[which(res$dates2=="2022-03-18"):length(res$dates2),]
L = max(length(dataC[,1]),length(dataT[,1]))
data.adj = data.frame(date = seq(as.Date("2022-03-18"),length.out = L, by ="days"), cases = rep(NA,L), tests = rep(NA,L), cases.adj = rep(NA,L))
data.adj$cases[1:length(dataC$cases)] = dataC$cases
data.adj$tests[1:length(dataT$test.raw)] = dataT$test.raw
data.adj$cases.adj = data.adj$cases*(mean(res$test.raw[66:93])/data.adj$tests)
data.adj2 = data.frame(date = datNL$date, cases = datNL$cases, tests = datNL$tests, cases.adj = datNL$cases)
data.adj2 = data.adj2[1:which(datNL$date=="2022-03-17"),]
data.adj$date=as.Date(data.adj$date)
data.adj2$date = as.Date(data.adj2$date)
data.adj = rbind(data.adj2,data.adj)
rollcases = c(rep(NA,6),rollmean(data.adj$cases.adj,7))
data.adj = data.frame(data.adj,rollcases)
# gtime0+scale_x_date(date_breaks = "7 days",date_labels = "%d %b",limits=c(as.Date("2022-02-01"), tail(R.df$date,1)))+ylim(c(0,1000))+geom_point(data=data.adj[84:length(data.adj$date),], aes(x=date, y=cases.adj), col = "black", pch=21, fill="plum3")+geom_line(data=data.adj[84:length(data.adj$date),], aes(x=date, y=cases.adj), col ="plum3")+geom_line(data=data.adj, aes(x=date, y=rollcases), col = "black")+ggtitle("Adjusted new cases (daily)")
mean.df = data.frame(date = res$dates2[66:93], mean = rep(mean(res$test.raw[66:93]),28))
L = length(res$dates2)
mod = lm(res$test.raw[94:L]~seq(0,length(res$dates2[94:L])-1))
reg = data.frame(date =res$dates2[94:L], reg = unname(mod$fitted.values))
g8+scale_x_date(date_breaks = "7 days",date_labels = "%d %b",limits=c(as.Date("2022-02-01"), tail(R.df$date,1)))+ylim(c(0,2500))+
#geom_line(data=mean.df, aes(x=date, y=mean), col = "plum3", lwd=2)+
#geom_line(data=reg, aes(x=date, y=reg), col = "plum3", lwd=2)+
geom_vline(xintercept = as.Date("2022-03-17"), lty=2)+annotate("text", x = as.Date("2022-03-18"), y = 1500, label = "PCR eligibility changes", col="black", angle=90, align="left")
# g18b+scale_x_date(date_breaks = "7 days",limits=c(as.Date("2022-02-01"), tail(R.df$date,1)))
g7
gratio2
new.deaths = diff(c(0,data6$cum.death))
outres = data.frame(date=data6$date, cases=data6$cases, hosp.occ = data6$hosp.occ, new.deaths = new.deaths)
outres=tail(outres,10)
rownames(outres) <- NULL
print(outres)
outres1 = data.frame(date = datNL$date, cases = datNL$cases, tests=datNL$tests)
outres=tail(outres1,10)
rownames(outres) <- NULL
print(outres)
names(res)[names(res) =="dates2"] <- "date"
names(res)[names(res) =="all"] <- "est.active"
names(res)[names(res) =="all.low"] <- "est.active.low"
names(res)[names(res) =="all.high"] <- "est.active.high"
names(res)[names(res) =="detected.roll"] <- "reported.roll"
res = res[,-7]
write.csv(res, '/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/NL-public-COVID-data/estimated.active.csv')
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
devtools::source_gist("98cc4db25867bd18cc42b6568b4c6848", sha1 = "3cc333562e")
library(McMasterPandemic)
fit = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/initial_model_files/fit.rds')
params = read_params("PHAC.csv")
params["N"] = 522453  # nfld population
params$beta0 = as.numeric(unname(coef(fit, 'fitted')$params[1]))
params$mu = as.numeric(unname(coef(fit, 'fitted')$params[2]))
params$phi1 = as.numeric(unname(coef(fit, 'fitted')$params[3]))
params$delta = as.numeric(unname(coef(fit, 'fitted')$params[4]))
params$nonhosp_mort = as.numeric(unname(coef(fit, 'fitted')$params[5]))
library(tidyr)
library(dplyr)
library(McMasterPandemic)
library(ggplot2)
library(lubridate)
library(patchwork)
setwd("/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan")
source('get_data.R')
source('functions.R')
fit = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/fit_var.rds')
fitted_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/fitted_data_var.rds')
observed_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/initial_model_files/observed_data2.rds')
cases = filter(observed_data,var=="report")
fitted_cases = filter(fitted_data,var=="report")
p = var.frac(fitted_cases$date)$var.frac
output = data.frame(date = fitted_cases$date, cases=fitted_cases$value, BA.2 = p*fitted_cases$value)
g.var = ggplot()+
#geom_point(data=cases,aes(x= as.Date(date),y=value), col = "black", pch=21, fill = "white")+
geom_vline(aes(xintercept = tail(observed_data$date,1)),
colour = "grey60", linetype = "dashed")+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = cases,ymin=0),fill = "dodgerblue", alpha = 0.3)+
geom_line(data= output, aes(x= as.Date(date), y = cases),col = "dodgerblue", alpha = 0.3)+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = BA.2,ymin=0),fill = "blue", alpha = 0.3)+
annotate("text", x = as.Date("2022-03-08"), y = 200, label = "BA.1", col = "dodgerblue")+
annotate("text", x = as.Date("2022-03-28"), y = 100, label = "BA.2", col="darkblue")+
ylab("Est. reported new cases (daily)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+
geom_point(data = cases,aes(x = date, y = value),fill = "white", pch=21)+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")
observed_cases = filter(observed_data,var=="report")
gC=plot_forecast(fitted_data, "report", observed_data)+ylab("Est. reported new cases (daily)")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))
gH=plot_forecast(fitted_data, "H", observed_data)+ylab("Fitted hospital occupancy")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+geom_vline(aes(xintercept = tail(observed_data$date,1)),colour = "grey60", linetype = "dashed")
library(lubridate)
deaths = filter(observed_data,var=="death")%>%group_by(week = cut(date, "week")) %>% summarise(value = sum(value))
fitted_deaths = filter(fitted_data,var=="death")
g1 = ggplot()+
geom_ribbon(data=fitted_deaths, aes(x=as.Date(date),ymin=7*lwr, ymax=7*upr), alpha = 0.3, fill = "dodgerblue")+
geom_line(data=fitted_deaths,aes(x=as.Date(date), y=7*value), col = "dodgerblue")+ylab("Fitted deaths (weekly)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+
geom_point(data=deaths, aes(x=as.Date(week),y=value), fill = "white", pch=21)+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")+geom_vline(aes(xintercept = tail(observed_data$date,1)), colour = "grey60", linetype = "dashed")
g1
g.var/gH/g1
g.var/gH/g1
params
knitr::include_graphics("/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/flowchart1.png")
100-62
source('~/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/fit_no_variant_model.R')
source('~/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/fit_no_variant_model.R')
params
source('~/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/fit_no_variant_model.R')
source('~/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/fit_no_variant_model.R')
fit
exp(-3.8159729)
source('~/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/fit_no_variant_model.R')
source('~/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/fit_no_variant_model.R')
params
100*as.numeric(params$nonhosp_mort)
params$nonhosp_mort
params$N
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/flowchart1.png")
options(scipen=999)
devtools::source_gist("98cc4db25867bd18cc42b6568b4c6848", sha1 = "3cc333562e")
library(McMasterPandemic)
fit = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/initial_model_files/fit.rds')
params = read_params("PHAC.csv")
params["N"] = 522453  # nfld population
params$beta0 = as.numeric(unname(coef(fit, 'fitted')$params[1]))
params$mu = as.numeric(unname(coef(fit, 'fitted')$params[2]))
params$phi1 = as.numeric(unname(coef(fit, 'fitted')$params[3]))
params$delta = as.numeric(unname(coef(fit, 'fitted')$params[4]))
params$nonhosp_mort = as.numeric(unname(coef(fit, 'fitted')$params[5]))
library(tidyr)
library(dplyr)
library(McMasterPandemic)
library(ggplot2)
library(lubridate)
library(patchwork)
setwd("/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan")
source('get_data.R')
source('functions.R')
fit = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/fit_var.rds')
fitted_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/fitted_data_var.rds')
observed_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/initial_model_files/observed_data2.rds')
cases = filter(observed_data,var=="report")
fitted_cases = filter(fitted_data,var=="report")
p = var.frac(fitted_cases$date)$var.frac
output = data.frame(date = fitted_cases$date, cases=fitted_cases$value, BA.2 = p*fitted_cases$value)
g.var = ggplot()+
#geom_point(data=cases,aes(x= as.Date(date),y=value), col = "black", pch=21, fill = "white")+
geom_vline(aes(xintercept = tail(observed_data$date,1)),
colour = "grey60", linetype = "dashed")+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = cases,ymin=0),fill = "dodgerblue", alpha = 0.3)+
geom_line(data= output, aes(x= as.Date(date), y = cases),col = "dodgerblue", alpha = 0.3)+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = BA.2,ymin=0),fill = "blue", alpha = 0.3)+
annotate("text", x = as.Date("2022-03-08"), y = 200, label = "BA.1", col = "dodgerblue")+
annotate("text", x = as.Date("2022-03-28"), y = 100, label = "BA.2", col="darkblue")+
ylab("Est. reported new cases (daily)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+
geom_point(data = cases,aes(x = date, y = value),fill = "white", pch=21)+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")
observed_cases = filter(observed_data,var=="report")
gC=plot_forecast(fitted_data, "report", observed_data)+ylab("Est. reported new cases (daily)")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))
gH=plot_forecast(fitted_data, "H", observed_data)+ylab("Fitted hospital occupancy")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+geom_vline(aes(xintercept = tail(observed_data$date,1)),colour = "grey60", linetype = "dashed")
library(lubridate)
deaths = filter(observed_data,var=="death")%>%group_by(week = cut(date, "week")) %>% summarise(value = sum(value))
fitted_deaths = filter(fitted_data,var=="death")
g1 = ggplot()+
geom_ribbon(data=fitted_deaths, aes(x=as.Date(date),ymin=7*lwr, ymax=7*upr), alpha = 0.3, fill = "dodgerblue")+
geom_line(data=fitted_deaths,aes(x=as.Date(date), y=7*value), col = "dodgerblue")+ylab("Fitted deaths (weekly)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+
geom_point(data=deaths, aes(x=as.Date(week),y=value), fill = "white", pch=21)+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")+geom_vline(aes(xintercept = tail(observed_data$date,1)), colour = "grey60", linetype = "dashed")
g1
g.var/gH/g1
params$N
params$nonhosp_mort
params
params
options(scipen=999)
devtools::source_gist("98cc4db25867bd18cc42b6568b4c6848", sha1 = "3cc333562e")
library(McMasterPandemic)
fit = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/initial_model_files/fit.rds')
params = read_params("PHAC.csv")
params["N"] = 522453  # nfld population
params$beta0 = as.numeric(unname(coef(fit, 'fitted')$params[1]))
params$mu = as.numeric(unname(coef(fit, 'fitted')$params[2]))
params$phi1 = as.numeric(unname(coef(fit, 'fitted')$params[3]))
params$nonhosp_mort = as.numeric(unname(coef(fit, 'fitted')$params[4]))
params
round(100*as.numeric(params$nonhosp_mort),1)
source('~/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/fit_no_variant_model.R')
fit
