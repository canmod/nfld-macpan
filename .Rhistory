output = data.frame(date = fitted_cases$date, cases=fitted_cases$value, BA.2 = p*fitted_cases$value)
hospital = filter(observed_data,var=="H")
# Comparison with Ontario
dat=read.csv('https://raw.githubusercontent.com/ahurford/covid-nl/master/covid19-download.csv', fill=TRUE)
datON = dat[dat$prname=="Ontario",]
datON = datON[datON$date>"2021-12-01",]
gON = ggplot()+
geom_ribbon(data=datON,aes(x=as.Date(date), ymax=100*numtoday/max(numtoday), ymin=0), fill = "dodgerblue", alpha = 0.3)+
geom_line(data=scenario[!is.na(scenario$report),],aes(x=as.Date(date), y=100*report/max(report)), col = "black",lty=1)+
annotate("text", x = as.Date("2022-03-31"), y = 25, label = "Ontario", col="dodgerblue")+
annotate("text", x = as.Date("2022-02-10"), y = 75, label = "NL without\nrestrictions")+
ylab("New cases as % of peak")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")
gH = plot_forecast(fitted_data, "H", observed_data)+ylab("Hospital occupancy")
#+geom_line(data=scenario,aes(x=as.Date(date), y=H), col = "black",lty=1)
gC = plot_forecast(fitted_data, "report", observed_data)+ylab("Reported new cases (daily)")
#+geom_line(data=scenario,aes(x=as.Date(date), y=report), col = "black",lty=1)
gD = ggplot()+
geom_ribbon(data=fitted_deaths, aes(x=as.Date(date),ymin=7*lwr, ymax=7*upr), alpha = 0.3, fill = "dodgerblue")+
geom_line(data=deaths, aes(x=as.Date(week),y=value))+
geom_point(data=deaths, aes(x=as.Date(week),y=value), fill = "white", pch=21)+
geom_line(data=fitted_deaths,aes(x=as.Date(date), y=7*value), col = "dodgerblue")+ylab("Deaths (weekly)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")+geom_vline(xintercept = max(observed_data$date), col="grey", lty=2)
#+geom_line(data=scenario,aes(x=as.Date(date), y=7*D), col = "black", lty=1)
gcases = ggplot()+
#geom_point(data=cases,aes(x= as.Date(date),y=value), col = "black", pch=21, fill = "white")+
geom_vline(aes(xintercept = tail(observed_data$date,1)),
colour = "grey60", linetype = "dashed")+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = cases,ymin=0),fill = "dodgerblue", alpha = 0.3)+
geom_line(data= output, aes(x= as.Date(date), y = cases),col = "dodgerblue", alpha = 0.3)+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = BA.2,ymin=0),fill = "blue", alpha = 0.3)+
annotate("text", x = as.Date("2022-03-08"), y = 200, label = "BA.1", col = "dodgerblue")+
annotate("text", x = as.Date("2022-03-28"), y = 100, label = "BA.2", col="darkblue")+
ylab("Est. reported new cases (daily)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")
gC.obs = ggplot()+
geom_line(data=cases, aes(x = date, y=value))+
geom_point(data=cases, aes(x = date, y=value),fill = "white", pch=21)+
labs(y = "Reported new cases (daily)")+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"),tail(as.Date(fitted_cases$date),1)))+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+
theme(axis.title.x = element_blank())
gH.obs = ggplot()+
geom_line(data=hospital[!is.na(hospital$value),], aes(x = date, y=value))+
geom_point(data=hospital, aes(x = date, y=value),fill = "white", pch=21)+
labs(y = "Hospital occupancy")+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"),tail(as.Date(fitted_cases$date),1)))+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+
theme(axis.title.x = element_blank())
gD.obs = ggplot()+
geom_line(data=deaths, aes(x = as.Date(week), y=value))+
geom_point(data=deaths, aes(x = as.Date(week),y=value),fill = "white", pch=21)+
ylab("Deaths (weekly)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b",limits = c(as.Date("2021-12-15"),tail(as.Date(deaths$week),1)))+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+
theme(axis.title.x = element_blank())
gC.obs
gH.obs
gD.obs
gC
gH
gD
fitted_total_deaths = filter(fitted_data,var=="death")%>%filter(date>"2021-12-15")%>%filter(!is.na(value))%>%summarize(sum(value))
scenario_total_deaths = filter(scenario,date>"2021-12-15")%>%filter(!is.na(D))%>%summarize(sum(D))
fitted_total_cases = filter(fitted_data,var=="report")%>%filter(date>"2021-12-15")%>%filter(!is.na(value))%>%summarize(sum(value))
scenario_total_cases = filter(scenario,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))
gON
params$beta0
tail(coef(fit, 'fitted')$time_params, -1)
params$beta0
coef(fit, 'fitted')$time_params
transmission.rate = c(params$beta0, coef(fit, 'fitted')$time_params)
dates = c("2021-12,01",fit$forecast_args$time_args$params_timevar$Date)
transmission.rate = c(params$beta0, coef(fit, 'fitted')$time_params)
dates = c("2021-12-01",fit$forecast_args$time_args$params_timevar$Date)
dates
gH+ geom_vline(aes(xintercept = fit$forecast_args$time_args$params_timevar$Date),
colour = "grey60", linetype = "dashed")
gH+ geom_vline(aes(xintercept = fit$forecast_args$time_args$params_timevar$Date[1]),
colour = "grey60", linetype = "dashed")
gH+ geom_vline(aes(xintercept = as.Date(fit$forecast_args$time_args$params_timevar$Date)),
colour = "grey60", linetype = "dashed")
gH+geom_vline(aes(xintercept = as.Date(fit$forecast_args$time_args$params_timevar$Date)),colour = "grey60", linetype = "dashed")
as.Date(fit$forecast_args$time_args$params_timevar$Date)
gH+geom_vline(aes(xintercept = "2022-01-04"),colour = "grey60", linetype = "dashed")
gH+geom_vline(aes(xintercept = as.Date("2022-01-04")),colour = "grey60", linetype = "dashed")
gD
gH+geom_vline(aes(xintercept = as.Date(fit$forecast_args$time_args$params_timevar$Date),colour = "grey60", linetype = "dashed")
gD
gH+geom_vline(aes(xintercept = as.Date(fit$forecast_args$time_args$params_timevar$Date[1]),colour = "grey60", linetype = "dashed")
gD
gH+geom_vline(aes(xintercept = as.Date(c("2022-01-04", "2022-02-17"))),colour = "grey60", linetype = "dashed")
gH+geom_vline(aes(xintercept = c(as.Date("2022-01-04"), as.Date("2022-02-17"))),colour = "grey60", linetype = "dashed")
gH+geom_vline(aes(xintercept = c(as.Date("2022-01-04"), as.Date("2022-02-17")),colour = "grey60", linetype = "dashed")
gD
gH+geom_vline(aes(xintercept = c(as.Date("2022-01-04"), as.Date("2022-02-17"))),colour = "grey60", linetype = "dashed")
gH+geom_vline(aes(xintercept = as.Date(fit$forecast_args$time_args$params_timevar$Date[1])),colour = "grey60", linetype = "dashed")
gD
gH = plot_forecast(fitted_data, "H", observed_data)+ylab("Hospital occupancy")
+geom_line(data=scenario,aes(x=as.Date(date), y=H), col = "tan1",lty=1)
head(scenario)
gH = plot_forecast(fitted_data, "H", observed_data)+ylab("Hospital occupancy")+geom_line(data=scenario,aes(x=as.Date(date), y=H), col = "tan1",lty=1)
gH
fD = filter(fitted_data,var=="death")%>%filter(date>"2021-12-15")%>%filter(!is.na(value))%>%summarize(sum(value))
sD = filter(scenario,date>"2021-12-15")%>%filter(!is.na(D))%>%summarize(sum(D))
fC = filter(fitted_data,var=="report")%>%filter(date>"2021-12-15")%>%filter(!is.na(value))%>%summarize(sum(value))
sC = filter(scenario,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))
df2 = data.frame(Quantity = c("total cases", "total cases", "total deaths", "total deaths"), Scenario = c("actual", "no restrictions", "actual", "no restrictions"), value = c(fC, sC, fD, sC))
fD
sD
fD = unname(filter(fitted_data,var=="death")%>%filter(date>"2021-12-15")%>%filter(!is.na(value))%>%summarize(sum(value)))
sD = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(D))%>%summarize(sum(D))))
fD
fD = filter(fitted_data,var=="death")%>%filter(date>"2021-12-15")%>%filter(!is.na(value))%>%summarize(sum(value))[1]
fD = filter(fitted_data,var=="death")%>%filter(date>"2021-12-15")%>%filter(!is.na(value))%>%summarize(sum(value))
fD
fD$`sum(value)`
fD = round(filter(fitted_data,var=="death")%>%filter(date>"2021-12-15")%>%filter(!is.na(value))%>%summarize(sum(value))fD$`sum(value)`)
fD = round(filter(fitted_data,var=="death")%>%filter(date>"2021-12-15")%>%filter(!is.na(value))%>%summarize(sum(value))$`sum(value)`)
fD = filter(fitted_data,var=="death")%>%filter(date>"2021-12-15")%>%filter(!is.na(value))%>%summarize(sum(value))
fD = round(fD$`sum(value)`)
fD
sD
fD = filter(fitted_data,var=="death")%>%filter(date>"2021-12-15")%>%filter(!is.na(value))%>%summarize(sum(value))
fD = round(fD$`sum(value)`)
sD = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(D))%>%summarize(sum(D))))
fC = filter(fitted_data,var=="report")%>%filter(date>"2021-12-15")%>%filter(!is.na(value))%>%summarize(sum(value))
fC = round(fC$`sum(value)`)
sC = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report)))
df2 = data.frame(Quantity = c("total cases", "total cases", "total deaths", "total deaths"), Scenario = c("actual", "no restrictions", "actual", "no restrictions"), value = c(fC, sC, fD, sC))
fC = filter(fitted_data,var=="report")%>%filter(date>"2021-12-15")%>%filter(!is.na(value))%>%summarize(sum(value))
fC
fC = round(fC$`sum(value)`)
fC
sC = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report)))
sC = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))))
sC = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))))
sC
df2 = data.frame(Quantity = c("total cases", "total cases", "total deaths", "total deaths"), Scenario = c("actual", "no restrictions", "actual", "no restrictions"))
df2
df2 = data.frame(Quantity = c("total cases", "total cases", "total deaths", "total deaths"), Scenario = c("actual", "no restrictions", "actual", "no restrictions"), Value = c(fC, sC, fD, sC))
df2
fD = filter(fitted_data,var=="death")%>%filter(date>"2021-12-15")%>%filter(!is.na(value))%>%summarize(sum(value))
fD = round(fD$`sum(value)`)
sD = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(D))%>%summarize(sum(D))))
fC = filter(fitted_data,var=="report")%>%filter(date>"2021-12-15")%>%filter(!is.na(value))%>%summarize(sum(value))
fC = round(fC$`sum(value)`)
sC = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))))
df2 = data.frame(Quantity = c("total cases", "total cases", "total deaths", "total deaths"), Scenario = c("actual", "no restrictions", "actual", "no restrictions"), Value = c(fC, sC, fD, sC))
df2
Value = c(fC, sC, fD, sC)
Value
fC
Value = c(fC[1], sC[1], fD[1], sC[1])
Value
fC
fC[1]
fC[[1]]
flatten(fC)
Value = flatten(c(fC, sC, fD, sC))
Value
Value = NULL
Value[1] = fC
Value[2] = sC
Value[3] = fC
Value[4] = fD
Value
Value = NULL
Value[1,1] = fC
Value[1,1] = flatten(fC)
fC
sC
sC[1]
unname(sC)
fD
sD
204/171
50660/44031
library(tidyr)
library(dplyr)
library(McMasterPandemic)
library(ggplot2)
library(lubridate)
library(patchwork)
devtools::source_gist("98cc4db25867bd18cc42b6568b4c6848", sha1 = "3cc333562e")
setwd("/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan")
source('functions.R')
observed_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/initial_model_files/observed_data2.rds')
fit = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/initial_model_files/fit.rds')
fitted_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/initial_model_files/fitted_data.rds')
params = read_params("PHAC.csv")
params["N"] = 522453  # nfld population
params = fix_pars(params)
# This gives me errors but then I run the line individually and it's fine
params$beta0 = as.numeric(unname(coef(fit, 'fitted')$params[1]))
params$mu = as.numeric(unname(coef(fit, 'fitted')$params[2]))
params$phi1 = as.numeric(unname(coef(fit, 'fitted')$params[3]))
end_date = max(observed_data$date)
#Changing from 90 to 15 improves fit substantially
start_date_offset = 15
start_date = min(observed_data$date) - start_date_offset
# The breakpoint on Jan 4 is removed
params_timevar = data.frame(
Date = tail(fit$forecast_args$time_args$params_timevar$Date, -1), # dates of breakpoints
Symbol = "beta0",                     # parameters to vary
Value = tail(coef(fit, 'fitted')$time_params, -1),                    # NA means calibrate to data
Type = "abs"                          # abs = change to value in Value col
)
state <- make_state(params=params)
res1 <- run_sim(params=params,params_timevar=params_timevar,state=state, start_date=start_date, end_date=end_date)
scenario = data.frame(date=res1$date,H=res1$H, D = res1$death, report = res1$report, cumRep = res1$cumRep)
# Filtered data
deaths = filter(observed_data,var=="death")%>%group_by(week = cut(date, "week")) %>% summarise(value = sum(value))
fitted_deaths = filter(fitted_data,var=="death")
cases = filter(observed_data,var=="report")
fitted_cases = filter(fitted_data,var=="report")
p = var.frac(fitted_cases$date)$var.frac
output = data.frame(date = fitted_cases$date, cases=fitted_cases$value, BA.2 = p*fitted_cases$value)
hospital = filter(observed_data,var=="H")
# Long fitted data.
end_date = end_date + 100
params_timevar = data.frame(
Date = tail(fit$forecast_args$time_args$params_timevar$Date), # dates of breakpoints
Symbol = "beta0",                     # parameters to vary
Value = tail(coef(fit, 'fitted')$time_params),                    # NA means calibrate to data
Type = "abs"                          # abs = change to value in Value col
)
state <- make_state(params=params)
res2 <- run_sim(params=params,params_timevar=params_timevar,state=state, start_date=start_date, end_date=end_date)
scenario.long = data.frame(date=res2$date,H=res1$H, D = res2$death, report = res2$report, cumRep = res2$cumRep)
scenario.long = data.frame(date=res2$date,H=res2$H, D = res2$death, report = res2$report, cumRep = res2$cumRep)
fD = round(unname(filter(scenario.long,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))))
sD = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(D))%>%summarize(sum(D))))
fC = round(unname(filter(scenario.long,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))))
sC = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))))
df2 = data.frame(Quantity = c("total cases", "total cases", "total deaths", "total deaths"), Scenario = c("actual", "no restrictions", "actual", "no restrictions"), Value = c(44031, 50660, 171, 204))
df2
fD = round(unname(filter(scenario.long,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))))
sD = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(D))%>%summarize(sum(D))))
fC = round(unname(filter(scenario.long,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))))
sC = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))))
df2 = data.frame(Quantity = c("total cases", "total cases", "total deaths", "total deaths"), Scenario = c("actual", "no restrictions", "actual", "no restrictions"), Value = c(fC, sC, fD, sD))
df2
fC
sC
fC
fD
fD = round(unname(filter(scenario.long,date>"2021-12-15")%>%filter(!is.na(D))%>%summarize(sum(report))))
fD
fD = round(unname(filter(scenario.long,date>"2021-12-15")%>%filter(!is.na(D))%>%summarize(sum(report))))
sD = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(D))%>%summarize(sum(D))))
fC = round(unname(filter(scenario.long,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))))
sC = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))))
df2 = data.frame(Quantity = c("total cases", "total cases", "total deaths", "total deaths"), Scenario = c("actual", "no restrictions", "actual", "no restrictions"), Value = c(45535, 50660))
fD
fD = round(unname(filter(scenario.long,date>"2021-12-15")%>%filter(!is.na(D))%>%summarize(sum(D))))
sD = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(D))%>%summarize(sum(D))))
fC = round(unname(filter(scenario.long,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))))
sC = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))))
df2 = data.frame(Quantity = c("total cases", "total cases", "total deaths", "total deaths"), Scenario = c("actual", "no restrictions", "actual", "no restrictions"), Value = c(45535, 50660))
fD
sD
50660/45535
204/188
end_date = end_date + 200
params_timevar = data.frame(
Date = tail(fit$forecast_args$time_args$params_timevar$Date), # dates of breakpoints
Symbol = "beta0",                     # parameters to vary
Value = tail(coef(fit, 'fitted')$time_params),                    # NA means calibrate to data
Type = "abs"                          # abs = change to value in Value col
)
state <- make_state(params=params)
res2 <- run_sim(params=params,params_timevar=params_timevar,state=state, start_date=start_date, end_date=end_date)
scenario.long = data.frame(date=res2$date,H=res2$H, D = res2$death, report = res2$report, cumRep = res2$cumRep)
fD = round(unname(filter(scenario.long,date>"2021-12-15")%>%filter(!is.na(D))%>%summarize(sum(D))))
sD = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(D))%>%summarize(sum(D))))
fC = round(unname(filter(scenario.long,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))))
sC = round(unname(filter(scenario,date>"2021-12-15")%>%filter(!is.na(report))%>%summarize(sum(report))))
df2 = data.frame(Quantity = c("total cases", "total cases", "total deaths", "total deaths"), Scenario = c("actual", "no restrictions", "actual", "no restrictions"), Value = c(45535, 50660, 188, 204))
fC
fD
sC
sD
data9
res
res
head(res)
res
head(res)
res
head(res)
names(res)[names(res) =="dates2"] <- "date"
head(res)
names(res)[names(res) =="dates2"] <- "date"
names(res)[names(res) =="all"] <- "est.active"
names(res)[names(res) =="all.low"] <- "est.active.low"
names(res)[names(res) =="all.high"] <- "est.active.high"
res
names(res)[names(res) =="dates2"] <- "date"
names(res)[names(res) =="all"] <- "est.active"
names(res)[names(res) =="all.low"] <- "est.active.low"
names(res)[names(res) =="all.high"] <- "est.active.high"
res = res[,-res$all.vlow]
head(res)
getwd()
names(res)[names(res) =="dates2"] <- "date"
names(res)[names(res) =="all"] <- "est.active"
names(res)[names(res) =="all.low"] <- "est.active.low"
names(res)[names(res) =="all.high"] <- "est.active.high"
names(res)[names(res) =="detected.roll"] <- "reported.roll"
res = res[,-7]
write.csv(res, '/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/NL-public-COVID-data/estimated.active.csv')
g.var/gH/g1
g.var/gH/g1
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library(McMasterPandemic)
library(ggplot2)
library(lubridate)
library(patchwork)
setwd("/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan")
source('get_data.R')
source('functions.R')
fit = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/fit_var.rds')
fitted_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/fitted_data_var.rds')
observed_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/initial_model_files/observed_data2.rds')
cases = filter(observed_data,var=="report")
fitted_cases = filter(fitted_data,var=="report")
p = var.frac(fitted_cases$date)$var.frac
output = data.frame(date = fitted_cases$date, cases=fitted_cases$value, BA.2 = p*fitted_cases$value)
g.var = ggplot()+
#geom_point(data=cases,aes(x= as.Date(date),y=value), col = "black", pch=21, fill = "white")+
geom_vline(aes(xintercept = tail(observed_data$date,1)),
colour = "grey60", linetype = "dashed")+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = cases,ymin=0),fill = "dodgerblue", alpha = 0.3)+
geom_line(data= output, aes(x= as.Date(date), y = cases),col = "dodgerblue", alpha = 0.3)+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = BA.2,ymin=0),fill = "blue", alpha = 0.3)+
annotate("text", x = as.Date("2022-03-08"), y = 200, label = "BA.1", col = "dodgerblue")+
annotate("text", x = as.Date("2022-03-28"), y = 100, label = "BA.2", col="darkblue")+
ylab("Est. reported new cases (daily)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")
observed_cases = filter(observed_data,var=="report")
gC=plot_forecast(fitted_data, "report", observed_data)+ylab("Est. reported new cases (daily)")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))
#+geom_point(data=observed_cases, aes(x=as.Date(date),y=value), col = "dodgerblue", alpha=0.3)
gH=plot_forecast(fitted_data, "H", observed_data)+ylab("Fitted hospital occupancy")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))
library(lubridate)
deaths = filter(observed_data,var=="death")%>%group_by(week = cut(date, "week")) %>% summarise(value = sum(value))
fitted_deaths = filter(fitted_data,var=="death")
g1 = ggplot()+
geom_ribbon(data=fitted_deaths, aes(x=as.Date(date),ymin=7*lwr, ymax=7*upr), alpha = 0.3, fill = "dodgerblue")+
geom_line(data=fitted_deaths,aes(x=as.Date(date), y=7*value), col = "dodgerblue")+ylab("Fitted deaths (weekly)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+
geom_point(data=deaths, aes(x=as.Date(week),y=value), fill = "white", pch=21)+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")+geom_vline(xintercept = max(observed_data$date), col="grey", lty=2)
g1
g.var/gH/g1
g.var/gH/g1
source('~/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/fit_no_variant_model.R')
source('~/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/fit_variant_model.R')
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library(McMasterPandemic)
library(ggplot2)
library(lubridate)
library(patchwork)
setwd("/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan")
source('get_data.R')
source('functions.R')
fit = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/fit_var.rds')
fitted_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/fitted_data_var.rds')
observed_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/initial_model_files/observed_data2.rds')
cases = filter(observed_data,var=="report")
fitted_cases = filter(fitted_data,var=="report")
p = var.frac(fitted_cases$date)$var.frac
output = data.frame(date = fitted_cases$date, cases=fitted_cases$value, BA.2 = p*fitted_cases$value)
g.var = ggplot()+
#geom_point(data=cases,aes(x= as.Date(date),y=value), col = "black", pch=21, fill = "white")+
geom_vline(aes(xintercept = tail(observed_data$date,1)),
colour = "grey60", linetype = "dashed")+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = cases,ymin=0),fill = "dodgerblue", alpha = 0.3)+
geom_line(data= output, aes(x= as.Date(date), y = cases),col = "dodgerblue", alpha = 0.3)+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = BA.2,ymin=0),fill = "blue", alpha = 0.3)+
annotate("text", x = as.Date("2022-03-08"), y = 200, label = "BA.1", col = "dodgerblue")+
annotate("text", x = as.Date("2022-03-28"), y = 100, label = "BA.2", col="darkblue")+
ylab("Est. reported new cases (daily)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")
observed_cases = filter(observed_data,var=="report")
gC=plot_forecast(fitted_data, "report", observed_data)+ylab("Est. reported new cases (daily)")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))
#+geom_point(data=observed_cases, aes(x=as.Date(date),y=value), col = "dodgerblue", alpha=0.3)
gH=plot_forecast(fitted_data, "H", observed_data)+ylab("Fitted hospital occupancy")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+geom_vline(aes(xintercept = tail(observed_data$date,1)),
colour = "grey60", linetype = "dashed")+
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library(McMasterPandemic)
library(ggplot2)
library(lubridate)
library(patchwork)
setwd("/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan")
source('get_data.R')
source('functions.R')
fit = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/fit_var.rds')
fitted_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/fitted_data_var.rds')
observed_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/initial_model_files/observed_data2.rds')
cases = filter(observed_data,var=="report")
fitted_cases = filter(fitted_data,var=="report")
p = var.frac(fitted_cases$date)$var.frac
output = data.frame(date = fitted_cases$date, cases=fitted_cases$value, BA.2 = p*fitted_cases$value)
g.var = ggplot()+
#geom_point(data=cases,aes(x= as.Date(date),y=value), col = "black", pch=21, fill = "white")+
geom_vline(aes(xintercept = tail(observed_data$date,1)),
colour = "grey60", linetype = "dashed")+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = cases,ymin=0),fill = "dodgerblue", alpha = 0.3)+
geom_line(data= output, aes(x= as.Date(date), y = cases),col = "dodgerblue", alpha = 0.3)+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = BA.2,ymin=0),fill = "blue", alpha = 0.3)+
annotate("text", x = as.Date("2022-03-08"), y = 200, label = "BA.1", col = "dodgerblue")+
annotate("text", x = as.Date("2022-03-28"), y = 100, label = "BA.2", col="darkblue")+
ylab("Est. reported new cases (daily)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")
observed_cases = filter(observed_data,var=="report")
gC=plot_forecast(fitted_data, "report", observed_data)+ylab("Est. reported new cases (daily)")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))
#+geom_point(data=observed_cases, aes(x=as.Date(date),y=value), col = "dodgerblue", alpha=0.3)
gH=plot_forecast(fitted_data, "H", observed_data)+ylab("Fitted hospital occupancy")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+geom_vline(aes(xintercept = tail(observed_data$date,1)),colour = "grey60", linetype = "dashed")+
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library(McMasterPandemic)
library(ggplot2)
library(lubridate)
library(patchwork)
setwd("/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan")
source('get_data.R')
source('functions.R')
fit = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/fit_var.rds')
fitted_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/fitted_data_var.rds')
observed_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/initial_model_files/observed_data2.rds')
cases = filter(observed_data,var=="report")
fitted_cases = filter(fitted_data,var=="report")
p = var.frac(fitted_cases$date)$var.frac
output = data.frame(date = fitted_cases$date, cases=fitted_cases$value, BA.2 = p*fitted_cases$value)
g.var = ggplot()+
#geom_point(data=cases,aes(x= as.Date(date),y=value), col = "black", pch=21, fill = "white")+
geom_vline(aes(xintercept = tail(observed_data$date,1)),
colour = "grey60", linetype = "dashed")+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = cases,ymin=0),fill = "dodgerblue", alpha = 0.3)+
geom_line(data= output, aes(x= as.Date(date), y = cases),col = "dodgerblue", alpha = 0.3)+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = BA.2,ymin=0),fill = "blue", alpha = 0.3)+
annotate("text", x = as.Date("2022-03-08"), y = 200, label = "BA.1", col = "dodgerblue")+
annotate("text", x = as.Date("2022-03-28"), y = 100, label = "BA.2", col="darkblue")+
ylab("Est. reported new cases (daily)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")
observed_cases = filter(observed_data,var=="report")
gC=plot_forecast(fitted_data, "report", observed_data)+ylab("Est. reported new cases (daily)")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))
#+geom_point(data=observed_cases, aes(x=as.Date(date),y=value), col = "dodgerblue", alpha=0.3)
gH=plot_forecast(fitted_data, "H", observed_data)+ylab("Fitted hospital occupancy")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+geom_vline(aes(xintercept = tail(observed_data$date,1)),colour = "grey60", linetype = "dashed")
library(lubridate)
deaths = filter(observed_data,var=="death")%>%group_by(week = cut(date, "week")) %>% summarise(value = sum(value))
fitted_deaths = filter(fitted_data,var=="death")
g1 = ggplot()+
geom_ribbon(data=fitted_deaths, aes(x=as.Date(date),ymin=7*lwr, ymax=7*upr), alpha = 0.3, fill = "dodgerblue")+
geom_line(data=fitted_deaths,aes(x=as.Date(date), y=7*value), col = "dodgerblue")+ylab("Fitted deaths (weekly)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+
geom_point(data=deaths, aes(x=as.Date(week),y=value), fill = "white", pch=21)+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")+geom_vline(aes(xintercept = tail(observed_data$date,1)), colour = "grey60", linetype = "dashed")
g1
g.var/gH/g1
g.var/gH/g1
source('~/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/fit_variant_model.R')
g.var/gH/g1
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library(McMasterPandemic)
library(ggplot2)
library(lubridate)
library(patchwork)
setwd("/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan")
source('get_data.R')
source('functions.R')
fit = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/fit_var.rds')
fitted_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/fitted_data_var.rds')
observed_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/initial_model_files/observed_data2.rds')
cases = filter(observed_data,var=="report")
fitted_cases = filter(fitted_data,var=="report")
p = var.frac(fitted_cases$date)$var.frac
output = data.frame(date = fitted_cases$date, cases=fitted_cases$value, BA.2 = p*fitted_cases$value)
g.var = ggplot()+
#geom_point(data=cases,aes(x= as.Date(date),y=value), col = "black", pch=21, fill = "white")+
geom_vline(aes(xintercept = tail(observed_data$date,1)),
colour = "grey60", linetype = "dashed")+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = cases,ymin=0),fill = "dodgerblue", alpha = 0.3)+
geom_line(data= output, aes(x= as.Date(date), y = cases),col = "dodgerblue", alpha = 0.3)+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = BA.2,ymin=0),fill = "blue", alpha = 0.3)+
annotate("text", x = as.Date("2022-03-08"), y = 200, label = "BA.1", col = "dodgerblue")+
annotate("text", x = as.Date("2022-03-28"), y = 100, label = "BA.2", col="darkblue")+
ylab("Est. reported new cases (daily)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")
observed_cases = filter(observed_data,var=="report")
gC=plot_forecast(fitted_data, "report", observed_data)+ylab("Est. reported new cases (daily)")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))
#+geom_point(data=observed_cases, aes(x=as.Date(date),y=value), col = "dodgerblue", alpha=0.3)
gH=plot_forecast(fitted_data, "H", observed_data)+ylab("Fitted hospital occupancy")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+geom_vline(aes(xintercept = tail(observed_data$date,1)),colour = "grey60", linetype = "dashed")
library(lubridate)
deaths = filter(observed_data,var=="death")%>%group_by(week = cut(date, "week")) %>% summarise(value = sum(value))
fitted_deaths = filter(fitted_data,var=="death")
g1 = ggplot()+
geom_ribbon(data=fitted_deaths, aes(x=as.Date(date),ymin=7*lwr, ymax=7*upr), alpha = 0.3, fill = "dodgerblue")+
geom_line(data=fitted_deaths,aes(x=as.Date(date), y=7*value), col = "dodgerblue")+ylab("Fitted deaths (weekly)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+
geom_point(data=deaths, aes(x=as.Date(week),y=value), fill = "white", pch=21)+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")+geom_vline(aes(xintercept = tail(observed_data$date,1)), colour = "grey60", linetype = "dashed")
g1
g.var/gH/g1
g.var/gH/g1
