geom_vline(xintercept = as.Date("2022-03-14"), lty=2, col="grey")+
geom_ribbon(data=res, aes(x=as.Date(dates2), ymax=all.low, ymin=all.high), fill="plum3", alpha = 0.2)+
geom_line(data=res, aes(x=as.Date(dates2), y=all), col="plum3", lwd=2)+
geom_point(data=data9, aes(x=as.Date(date), y=active), col = "plum3")+
geom_line(data=data9, aes(x=as.Date(date), y=active), col = "plum3")+
xlab("")+
ylab("")+
ggtitle(paste("Active cases to", format(tail(as.Date(res$dates2)-7,1), "%a %b %d")))+
annotate("text", x = as.Date("2022-02-10"), y = 4000, label = "est. total active cases",fontface=2, col="plum3")+
annotate("text", x = as.Date("2022-02-10"), y = 1000, label = "reported active cases", col="plum3")+
annotate("text", x = as.Date("2022-01-08"), y = 12500, label = "Testing changes", col="darkgrey", angle=90, align="left")+
annotate("text", x = as.Date("2022-03-18"), y =12500, label = "Testing changes", col="darkgrey", angle=90, align="left")+
annotate("text", x = as.Date("2022-01-26"), y = 12500, label = "K-12 return", col="darkgrey", angle=90, align="left")+
annotate("text", x = as.Date("2021-12-24"), y = 12500, label = "Alert level 3", col="darkgrey", angle=90, align="left")+
annotate("text", x = as.Date("2022-01-05"), y = 12500, label = "Alert level 4", col="darkgrey", angle=90, align="left")+
annotate("text", x = as.Date("2022-03-15"), y = 12500, label = "NL reopens", col="darkgrey", angle=90, align="left")+
annotate("text", x = as.Date("2022-02-18"), y = 10000, label = "Phased reopening begins", col="darkgrey", angle=90, align="left")+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90))
g8 = ggplot()+
geom_ribbon(data=res, aes(x=as.Date(dates2), ymax=test.raw, ymin=0), fill="plum3", alpha = 0.5)+
geom_line(data=res, aes(x=as.Date(dates2), y=test.raw), col = "plum3")+
geom_point(data=datNL, aes(x=as.Date(date), y=tests), col = "plum3")+
xlab("")+
ylab("")+
ggtitle(paste("Tests completed (daily) to", format(tail(as.Date(datNL$date),1), "%a %b %d")))+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90))
g9 = ggplot()+
geom_point(data=NL, aes(as.Date(dates2), y=cases.raw), col="plum3", lwd=0.5)+
geom_line(data=datNL, aes(x=as.Date(date), y=cases), col = "plum3")+
xlab("")+
ylab("")+
ggtitle(paste("Reported cases to", format(tail(as.Date(datNL$date),1), "%a %b %d")))+
theme_classic()+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90))
g18 = ggplot()+
geom_line(data=res, aes(x=as.Date(dates2), y=all.vlow), lwd=2)+
xlab("")+
ylab("Active cases in NL\n(reported and unreported)")+
ggtitle("Chui and Ndeffo-Mbah (2021)\nwith n=0")+
theme_classic()+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90))
g18b = ggplot()+
geom_point(data=res[res$positivity.raw>0,], aes(x=as.Date(dates2), y=100*positivity.raw), size = 0.5, col = "grey")+
geom_ribbon(data=res[res$positivity.raw>0,], aes(x=as.Date(dates2), ymax=100*positivity.raw, ymin = 0), alpha=0.2)+
geom_line(data=res[res$positivity.raw>0,], aes(x=as.Date(dates2), y=100*positivity.roll), lwd=1)+
xlab("")+
ylab("")+
ggtitle(paste("% test positivity to", format(tail(as.Date(datNL$date),1), "%a %b %d")))+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90))
gratio2=ggplot()+
geom_ribbon(data=res, aes(x=as.Date(dates2), ymin=all.low/active, ymax = all.high/active), fill="plum3",alpha=0.3)+
geom_line(data=res, aes(x=as.Date(dates2), y=all/active), col="plum3", lwd=2)+
# geom_hline(yintercept=2, col="grey")+
#geom_hline(yintercept=3, col="grey")+
#geom_hline(yintercept=5.4, col="grey")+
xlab("")+
# annotate("text", x = as.Date(tail(data$dates2,1)), y = 2.6, label = "CITF pre-Omicron",size=3.5, hjust=1)+
# annotate("text", x = as.Date(tail(data$dates2,1)), y = 1.9, label = "hosp. admissions (low)",size=3.5, hjust=1)+
# annotate("text", x = as.Date(tail(data$dates2,1)), y = 2.9, label = "hosp. admissions (high)",size=3.5, hjust=1)+
# annotate("text", x = as.Date(tail(data$dates2,1)), y = 5.3, label = "K-12 RAT study",size=3.5, hjust=1)+
# geom_hline(yintercept=2.7, col="grey")+
ylab("")+
ggtitle("Unreported cases per reported case")+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date(res$dates2[14]), as.Date(res$dates2[length(res$dates2)-7])))+
theme(axis.text.x = element_text(angle = 90))
T<-10
DT = function(){
mod = nls(val ~ a*exp(r*seq(1,T)),
start = list(a = 100, r = 0.2))
# The code below was slow, so I commented it out.
#CI = confint(mod, level=0.95)
#CI.lower = max(CI[2,1],0)
#CI.upper = CI[2,2]
lambda = unname(coef(mod)[2])
DT = c(round(log(2)/lambda,2))
p1=summary(mod)$coefficients[,4]
p = unname(p1[2])
return(c(DT,lambda))
}
HT = function(){
mod = nls(val ~ a*exp(-r*seq(1,T)),
start = list(a = 300, r = 0.2))
## The code below was slow so I commented it out
#CI = confint(mod, level=0.95)
#CI.lower = max(CI[2,1],0)
#CI.upper = CI[2,2]
lambda = unname(coef(mod)[2])
DT = c(-round(log(.5)/lambda,2), NA, NA)
p1=summary(mod)$coefficients[,4]
p = unname(p1[2])
return(c(DT))
}
R = rep(1,length(data9$cases))
seq = seq(T,length(data9$cases))
seq = seq[c(-4,-97)]
for(i in seq){
val<-data9$cases[(i-T+1):i]
dt = DT()
dtime = dt[1]
r = dt[2]
Gbar = 2.2
Gbar.sd = 1.1
k = Gbar.sd^2/Gbar^2
R[i] = (1+Gbar*r*k)^(1/k)
}
R.all = rep(NA,length(res$all))
seq = seq((15+T),length(res$all)-6)
for(i in seq){
val<-res$all[(i-T+1):i]
dt = DT()
dtime = dt[1]
r = dt[2]
Gbar = 2.2
Gbar.sd = 1.1
k = Gbar.sd^2/Gbar^2
R.all[i] = (1+Gbar*r*k)^(1/k)
}
if((length(data9$date)-length(res$dates2))>=0){
R.df = data.frame(date = tail(data9$date,-T), R=tail(R,-T), R.all=c(tail(R.all,-T),rep(NA,length(data9$date)-length(res$dates2))))
} else{
R.df = data.frame(date = tail(res$dates2,-T), R=c(rep(NA,length(res$dates2)-length(data9$date)),tail(R,-T)), R.all=tail(R.all,-T))
}
R1g = R.df$R
for(i in seq(1,length(R1g))){
if(!is.na(R1g[i])){
if(R1g[i]<1){
R1g[i] = NA
}
}
}
R2g = R.df$R.all
for(i in seq(1,length(R2g))){
if(!is.na(R2g[i])){
if(R.df$R.all[i]<1){
R2g[i] = NA}
}
}
g.R = ggplot(data = R.df, aes(x=date))+
geom_hline(yintercept=1,lty=2)+
geom_line(aes(y=R.all), col = "dodgerblue", lwd=1)+
geom_line(aes(y=R2g), col = "red", lwd=1)+
geom_line(aes(y=R), col = "dodgerblue", lwd=2)+
geom_line(aes(y=R1g), col = "red", lwd=2)+
geom_point(aes(y=R), col = "dodgerblue", fill="white", shape=21,size=2)+
geom_point(aes(y=R1g), col = "red", fill="white", shape=21,size=2)+
scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits=c(R.df$date[30], tail(R.df$date,1)))+theme(axis.text.x = element_text(angle = 90))+ylim(0.7,1.2)+ggtitle('Reproduction number, R')+xlab("")+ylab("")
g7
gtime/gtime2
gtime0/g8/g18b
gratio2
g.R
new.deaths = diff(c(0,data6$cum.death))
outres = data.frame(date=data6$date, cases=data6$cases, hosp.occ = data6$hosp.occ, new.deaths = new.deaths)
outres=tail(outres,10)
rownames(outres) <- NULL
print(outres)
outres1 = data.frame(date = datNL$date, cases = datNL$cases, tests=datNL$tests)
outres=tail(outres1,10)
rownames(outres) <- NULL
print(outres)
g1
g7
g7+add_phylopic(cat)
g7+add_phylopic(1,1,1,cat)
g7+cat
cat
cat[[1]]
g7+cat[[1]]
cat <- image_data("23cd6aa4-9587-4a2e-8e26-de42885004c9", size = 128)[[1]]
g7+cat[[1]]
g7+add_phylopic(cat)
g7+add_phylopic(1,1,1,cat)
g7+add_phylopic(cat,1,1,1)
cat <- image_data("23cd6aa4-9587-4a2e-8e26-de42885004c9", size = 128)
cat
cat[[1]]
g7+add_phylopic(cat[[1]],1,1,1)
gorilla <- name_search(text = "Gorilla", options = "namebankID")[[1]]
g7+add_phylopic(gorilla[[1]],1,1,1)
g7+add_phylopic(gorilla,1,1,1)
gorilla
gorilla <- name_search(text = "cat", options = "namebankID")[[1]]
gorilla <- name_search(text = "Gorilla gorilla", options = "namebankID")[[1]]
g7+add_phylopic(gorilla,1,1,1)
gorilla
g7+add_phylopic(gorilla$uid,1,1,1)
img <- image_data("388978a5-7a3b-4cef-ad8b-87dc76955af4", size = "512")[[1]]
img <- image_data(gorilla$uid, size = "512")[[1]]
img <- image_data(gorilla$uid[1], size = "512")[[1]]
gorilla$uid[1]
gorilla$uid[2]
img <- image_data(gorilla$uid[2], size = "512")[[1]]
img <- image_data(gorilla$uid[3], size = "512")[[1]]
img <- image_data(gorilla$uid[4], size = "512")[[1]]
img <- image_data(gorilla$uid[5], size = "512")[[1]]
img <- image_data(gorilla$uid[6], size = "512")[[1]]
gorilla <- name_search(text = "Gorilla gorilla", options = "namebankID")[[1]]
name_get(uuid = gorilla$uid[1])
id=name_get(uuid = gorilla$uid[1])
id
id<-unname(id)
image_get(uuid = id)
g1
p
library(png)
library(RCurl)
#I got these free png silhouettes of red fox and rabbit from phylopic.org
foxurl<-"http://phylopic.org/assets/images/submissions/51b1b6e4-129d-41a6-bbbd-c3fab459c25f.1024.png"
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
fox_logo <-  readPNG(getURLContent(foxurl))
rab_logo <-  readPNG(getURLContent(raburl))
logoing_func<-function(logo, x, y, size){
dims<-dim(logo)[1:2] #number of x-y pixels for the logo (aspect ratio)
AR<-dims[1]/dims[2]
par(usr=c(0, 1, 0, 1))
rasterImage(logo, x-(size/2), y-(AR*size/2), x+(size/2), y+(AR*size/2), interpolate=TRUE)
}
p+logoing_func(rab_logo, x=0.10, y=0.90, size=0.15)
p + add_phylopic(rab_logo, x=0.10, y=0.90, size=0.15)
p + add_phylopic(rab_logo, 1,1,1)
rab_logo <-  rasterImage(readPNG(getURLContent(raburl)))
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
rab_logo <-  rasterImage(readPNG(getURLContent(raburl)))
library(png)
library(RCurl)
#I got these free png silhouettes of red fox and rabbit from phylopic.org
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
rab_logo <-  readPNG(getURLContent(raburl))
logoing_func<-function(logo, x, y, size){
dims<-dim(logo)[1:2] #number of x-y pixels for the logo (aspect ratio)
AR<-dims[1]/dims[2]
par(usr=c(0, 1, 0, 1))
rasterImage(logo, x-(size/2), y-(AR*size/2), x+(size/2), y+(AR*size/2), interpolate=TRUE)
}
p + add_phylopic(logoing_func(rab_logo), 1,1,1)
p + add_phylopic(logoing_func(rab_logo, x=0.10, y=0.90, size=0.15), 1,1,1)
library(png)
library(RCurl)
#I got these free png silhouettes of red fox and rabbit from phylopic.org
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
rab_logo <-  readPNG(getURLContent(raburl))
logoing_func<-function(logo, x, y, size){
dims<-dim(logo)[1:2] #number of x-y pixels for the logo (aspect ratio)
AR<-dims[1]/dims[2]
par(usr=c(0, 1, 0, 1))
rasterImage(logo, x-(size/2), y-(AR*size/2), x+(size/2), y+(AR*size/2), interpolate=TRUE)
}
rabbit<-logoing_func(rab_logo, x=0.10, y=0.90, size=0.15)
library(png)
library(RCurl)
#I got these free png silhouettes of red fox and rabbit from phylopic.org
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
rabbit <-  readPNG(getURLContent(raburl))
p + add_phylopic(, 1,1,1)
library(png)
library(RCurl)
#I got these free png silhouettes of red fox and rabbit from phylopic.org
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
rabbit <-  readPNG(getURLContent(raburl))
p + add_phylopic(rabbit, 1,1,1)
data = data.frame(x = rand(10), y = rand(10))
data = data.frame(x = randint(10), y = randint(10))
data = data.frame(x = seq(1,10), y = sample(1:10))
data
library(png)
library(RCurl)
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
rabbit <-  readPNG(getURLContent(raburl))
# Some fake data to make a graph with
data = data.frame(x = seq(1,10), y = sample(1:10))
g=ggplot(data, aes(x=x,y=y))+
geom_point()
g + add_phylopic(rabbit, 1,1,1)
library(png)
library(RCurl)
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
rabbit <-  readPNG(getURLContent(raburl),size=10)
library(png)
library(RCurl)
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
rabbit <-  readPNG(getURLContent(raburl))
# Some fake data to make a graph with
data = data.frame(x = seq(1,10), y = sample(1:10))
g=ggplot(data, aes(x=x,y=y))+
geom_point()
g + add_phylopic(rabbit, 1,1,1,0.5)
library(png)
library(RCurl)
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
rabbit <-  readPNG(getURLContent(raburl))
# Some fake data to make a graph with
data = data.frame(x = seq(1,10), y = sample(1:10))
g=ggplot(data, aes(x=x,y=y))+
geom_point()
g + add_phylopic(rabbit, alpha = 0.5,x=5,y=7.5,size=5)
library(png)
library(RCurl)
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
rabbit <-  readPNG(getURLContent(raburl))
# Some fake data to make a graph with
data = data.frame(x = seq(1,10), y = sample(1:10))
g=ggplot(data, aes(x=x,y=y))+
geom_point()
g + add_phylopic(rabbit, alpha = 0.5,x=5,y=7.5,size=.5)
library(png)
library(RCurl)
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
rabbit <-  readPNG(getURLContent(raburl))
# Some fake data to make a graph with
data = data.frame(x = seq(1,10), y = sample(1:10))
g=ggplot(data, aes(x=x,y=y))+
geom_point()
g + add_phylopic(rabbit,5,7.5,.5)
library(png)
library(RCurl)
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
rabbit <-  readPNG(getURLContent(raburl))
# Some fake data to make a graph with
data = data.frame(x = seq(1,10), y = sample(1:10))
g=ggplot(data, aes(x=x,y=y))+
geom_point()
g + add_phylopic(rabbit,.5,5,7.5,.5)
library(png)
library(RCurl)
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
rabbit <-  readPNG(getURLContent(raburl))
# Some fake data to make a graph with
data = data.frame(x = seq(1,10), y = sample(1:10))
g=ggplot(data, aes(x=x,y=y))+
geom_point()
g + add_phylopic(rabbit,.5,5,7.5,1)
library(png)
library(RCurl)
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
rabbit <-  readPNG(getURLContent(raburl))
# Some fake data to make a graph with
data = data.frame(x = seq(1,10), y = sample(1:10))
g=ggplot(data, aes(x=x,y=y))+
geom_point()
g + add_phylopic(rabbit,.5,5,7.5,10)
library(png)
library(RCurl)
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
rabbit <-  readPNG(getURLContent(raburl))
# Some fake data to make a graph with
data = data.frame(x = seq(1,10), y = sample(1:10))
g=ggplot(data, aes(x=x,y=y))+
geom_point()
g + add_phylopic(rabbit,.5,5,7.5,7)
library(png)
library(RCurl)
raburl<-"http://phylopic.org/image/938a7ea7-5262-4bbb-85ba-cb39181002f0/"
rabbit <-  readPNG(getURLContent(raburl))
library(png)
library(RCurl)
rabbiturl<-"http://phylopic.org/image/938a7ea7-5262-4bbb-85ba-cb39181002f0/"
rabbit <-  readPNG(getURLContent(raburl))
library(png)
library(RCurl)
raburl<-"http://phylopic.org/assets/images/submissions/1e15411c-5394-4a9d-a209-76c8ac0c331d.1024.png"
rabbit <-  readPNG(getURLContent(raburl))
# Some fake data to make a graph with
data = data.frame(x = seq(1,10), y = sample(1:10))
g=ggplot(data, aes(x=x,y=y))+
geom_point()
g + add_phylopic(rabbit,.5,5,7.5,7)
library(png)
library(RCurl)
raburl<-"http://phylopic.org/assets/images/submissions/938a7ea7-5262-4bbb-85ba-cb39181002f0.512.png"
rabbit <-  readPNG(getURLContent(raburl))
# Some fake data to make a graph with
data = data.frame(x = seq(1,10), y = sample(1:10))
g=ggplot(data, aes(x=x,y=y))+
geom_point()
g + add_phylopic(rabbit,.5,5,7.5,7)
# You need to install these packages first
library(png)
library(RCurl)
# go to phylopic.org and search for your image. Click on the image you want (twice) # and the url should be similar to as below:
squidurl<-"http://phylopic.org/assets/images/submissions/938a7ea7-5262-4bbb-85ba-cb39181002f0.512.png"
kiwiurl<-"http://phylopic.org/assets/images/submissions/ad7d0f80-889e-4dba-a89d-c864f2f48184.512.png"
squid <-  readPNG(getURLContent(kiwiurl))
# Some fake data to make a graph with
data = data.frame(x = seq(1,10), y = sample(1:10))
g=ggplot(data, aes(x=x,y=y))+
geom_point()
g + add_phylopic(squid,.5,5,7.5,7)
g + add_phylopic(kiwi,1,3,4.5,4)
# You need to install these packages first
library(png)
library(RCurl)
# go to phylopic.org and search for your image. Click on the image you want (twice) # and the url should be similar to as below:
squidurl<-"http://phylopic.org/assets/images/submissions/938a7ea7-5262-4bbb-85ba-cb39181002f0.512.png"
kiwiurl<-"http://phylopic.org/assets/images/submissions/ad7d0f80-889e-4dba-a89d-c864f2f48184.512.png"
squid <-  readPNG(getURLContent(kiwiurl))
# Some fake data to make a graph with
data = data.frame(x = seq(1,10), y = sample(1:10))
g=ggplot(data, aes(x=x,y=y))+
geom_point()
g + add_phylopic(squid,.5,5,7,7) + add_phylopic(kiwi,1,3,4,2)
# You need to install these packages first
library(png)
library(RCurl)
# go to phylopic.org and search for your image. Click on the image you want (twice) # and the url should be similar to as below:
squidurl<-"http://phylopic.org/assets/images/submissions/938a7ea7-5262-4bbb-85ba-cb39181002f0.512.png"
kiwiurl<-"http://phylopic.org/assets/images/submissions/ad7d0f80-889e-4dba-a89d-c864f2f48184.512.png"
# Read in the PNG file:
squid <-  readPNG(getURLContent(squidurl))
kiwi <-  readPNG(getURLContent(kiwiurl))
# Some fake data to make a graph with
data = data.frame(x = seq(1,10), y = sample(1:10))
g=ggplot(data, aes(x=x,y=y))+
geom_point()
g + add_phylopic(squid,.5,5,7,7) + add_phylopic(kiwi,1,3,4,2)
# You need to install these packages first
library(png)
library(RCurl)
# go to phylopic.org and search for your image. Click on the image you want (twice) # and the url should be similar to as below:
squidurl<-"http://phylopic.org/assets/images/submissions/938a7ea7-5262-4bbb-85ba-cb39181002f0.512.png"
kiwiurl<-"http://phylopic.org/assets/images/submissions/ad7d0f80-889e-4dba-a89d-c864f2f48184.512.png"
# Read in the PNG file:
squid <-  readPNG(getURLContent(squidurl))
kiwi <-  readPNG(getURLContent(kiwiurl))
# Some fake data to make a graph with
data = data.frame(x = seq(1,10), y = sample(1:10))
g=ggplot(data, aes(x=x,y=y))+
geom_point()
# Note that add_phylopic is added as a layer to the ggplot()
g + add_phylopic(squid,alpha=.5,x=5,y=7,size=7) + add_phylopic(kiwi,1,3,4,2)
# You need to install these packages first
library(png)
library(RCurl)
# go to phylopic.org and search for your image. Click on the image you want (twice) # and the url should be similar to as below:
squidurl<-"http://phylopic.org/assets/images/submissions/938a7ea7-5262-4bbb-85ba-cb39181002f0.512.png"
kiwiurl<-"http://phylopic.org/assets/images/submissions/ad7d0f80-889e-4dba-a89d-c864f2f48184.512.png"
# Read in the PNG file:
squid <-  readPNG(getURLContent(squidurl))
kiwi <-  readPNG(getURLContent(kiwiurl))
# Some fake data to make a graph with
data = data.frame(x = seq(1,10), y = sample(1:10))
g=ggplot(data, aes(x=x,y=y))+
geom_point()
# Note that add_phylopic is added as a layer to the ggplot()
g + add_phylopic(squid,alpha=.5,x=5,y=7,ysize=7) + add_phylopic(kiwi,1,3,4,2)
source('~/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/fit_variant_model.R')
source('~/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/fit_variant_model.R')
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library(McMasterPandemic)
library(ggplot2)
library(lubridate)
library(patchwork)
setwd("/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan")
source('get_data.R')
source('functions.R')
fit = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/fit_var.rds')
fitted_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/variant_model/variant_model_files/fitted_data_var.rds')
observed_data = readRDS('/Users/ahurford/Desktop/Work/Research/Research_Projects/2022/nfld-macpan/initial_model/initial_model_files/observed_data2.rds')
cases = filter(observed_data,var=="report")
fitted_cases = filter(fitted_data,var=="report")
p = var.frac(fitted_cases$date)$var.frac
output = data.frame(date = fitted_cases$date, cases=fitted_cases$value, BA.2 = p*fitted_cases$value)
g.var = ggplot()+
#geom_point(data=cases,aes(x= as.Date(date),y=value), col = "black", pch=21, fill = "white")+
geom_vline(aes(xintercept = tail(observed_data$date,1)),
colour = "grey60", linetype = "dashed")+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = cases,ymin=0),fill = "dodgerblue", alpha = 0.3)+
geom_line(data= output, aes(x= as.Date(date), y = cases),col = "dodgerblue", alpha = 0.3)+
geom_ribbon(data= output, aes(x= as.Date(date), ymax = BA.2,ymin=0),fill = "blue", alpha = 0.3)+
annotate("text", x = as.Date("2022-03-08"), y = 200, label = "BA.1", col = "dodgerblue")+
annotate("text", x = as.Date("2022-03-28"), y = 100, label = "BA.2", col="darkblue")+
ylab("Est. reported new cases (daily)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")
observed_cases = filter(observed_data,var=="report")
gC=plot_forecast(fitted_data, "report", observed_data)+ylab("Est. reported new cases (daily)")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))
#+geom_point(data=observed_cases, aes(x=as.Date(date),y=value), col = "dodgerblue", alpha=0.3)
gH=plot_forecast(fitted_data, "H", observed_data)+ylab("Fitted hospital occupancy")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+geom_vline(aes(xintercept = tail(observed_data$date,1)),colour = "grey60", linetype = "dashed")
library(lubridate)
deaths = filter(observed_data,var=="death")%>%group_by(week = cut(date, "week")) %>% summarise(value = sum(value))
fitted_deaths = filter(fitted_data,var=="death")
g1 = ggplot()+
geom_ribbon(data=fitted_deaths, aes(x=as.Date(date),ymin=7*lwr, ymax=7*upr), alpha = 0.3, fill = "dodgerblue")+
geom_line(data=fitted_deaths,aes(x=as.Date(date), y=7*value), col = "dodgerblue")+ylab("Fitted deaths (weekly)")+ scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+
geom_point(data=deaths, aes(x=as.Date(week),y=value), fill = "white", pch=21)+
theme(axis.text.x = element_text(angle = 90),legend.position = "none")+xlab("")+geom_vline(aes(xintercept = tail(observed_data$date,1)), colour = "grey60", linetype = "dashed")
g1
g.var/gH/g1
g.var/gH/g1
g.cases
gC
g1
observed_cases = filter(observed_data,var=="report")
gC=plot_forecast(fitted_data, "report", observed_data)+ylab("Est. reported new cases (daily)")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))
+geom_point(data=observed_cases, aes(x=as.Date(date),y=value), col = "dodgerblue", alpha=0.3)
observed_cases = filter(observed_data,var=="report")
gC=plot_forecast(fitted_data, "report", observed_data)+ylab("Est. reported new cases (daily)")+scale_x_date(date_breaks = "7 day", date_labels = "%d %b", limits = c(as.Date("2021-12-15"), tail(as.Date(fitted_cases$date),1)))+geom_point(data=observed_cases, aes(x=as.Date(date),y=value), col = "dodgerblue", alpha=0.3)
gC
g.var++geom_point(data=observed_cases, aes(x=as.Date(date),y=value), col = "white", alpha=0.3)
g.var+geom_point(data=observed_cases, aes(x=as.Date(date),y=value), col = "white", alpha=0.3)
g.var+geom_point(data=observed_cases, aes(x=as.Date(date),y=value), fill = "white", pch=21)
g.var+geom_point(data=observed_cases, aes(x=as.Date(date),y=value), fill = "white", pch=21)+ylab("reported cases (daily)")
g.var+geom_point(data=observed_cases, aes(x=as.Date(date),y=value), fill = "white", pch=21)+ylab("Reported cases (daily)")
params = read_params("PHAC.csv")
library(McMasterPandemic)
params = read_params("PHAC.csv")
params
